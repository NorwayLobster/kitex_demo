// Code generated by Kitex v0.0.5. DO NOT EDIT.

package servicenamedaytimeinthriftfile

import (
	"context"
	"github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	"module_name_daytime/kitex_gen/api"
)

func serviceInfo() *kitex.ServiceInfo {
	return serviceNameDaytimeInThriftFileServiceInfo
}

var serviceNameDaytimeInThriftFileServiceInfo = newServiceInfo()

func newServiceInfo() *kitex.ServiceInfo {
	serviceName := "service_name_daytime_in_thrift_file"
	handlerType := (*api.ServiceNameDaytimeInThriftFile)(nil)
	methods := map[string]kitex.MethodInfo{
		"daytime": kitex.NewMethodInfo(daytimeHandler, newServiceNameDaytimeInThriftFileDaytimeArgs, newServiceNameDaytimeInThriftFileDaytimeResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "api",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.0.5",
		Extra:           extra,
	}
	return svcInfo
}

func daytimeHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*api.ServiceNameDaytimeInThriftFileDaytimeArgs)
	realResult := result.(*api.ServiceNameDaytimeInThriftFileDaytimeResult)
	success, err := handler.(api.ServiceNameDaytimeInThriftFile).Daytime(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newServiceNameDaytimeInThriftFileDaytimeArgs() interface{} {
	return api.NewServiceNameDaytimeInThriftFileDaytimeArgs()
}

func newServiceNameDaytimeInThriftFileDaytimeResult() interface{} {
	return api.NewServiceNameDaytimeInThriftFileDaytimeResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) Daytime(ctx context.Context, req *api.DaytimeRequest) (r *api.DaytimeResponse, err error) {
	var _args api.ServiceNameDaytimeInThriftFileDaytimeArgs
	_args.Req = req
	var _result api.ServiceNameDaytimeInThriftFileDaytimeResult
	if err = p.c.Call(ctx, "daytime", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
